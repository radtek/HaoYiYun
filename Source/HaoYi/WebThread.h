
#pragma once

#include "OSThread.h"
#include "json.h"

class CHaoYiView;
class CWebThread : public OSThread
{
public:
	CWebThread(CHaoYiView * lpView);
	~CWebThread();
public:
	GM_Error	Initialize();							// 初始化线程...
	void		doPostCurl(char *pData, size_t nSize);	// 处理汇报反馈...
	BOOL		doWebGetCamera(int nDBCameraID);		// 向网站注册摄像头...
	BOOL		doWebDelCamera(string & inDeviceSN);	// 向网站删除摄像头...
	BOOL		doWebRegCamera(GM_MapData & inData);	// 添加或修改通道...
	BOOL		doWebStatCamera(int nDBCamera, int nStatus, int nErrCode = 0, LPCTSTR lpszErrMsg = NULL);
	BOOL		doWebGatherLogout();		// 采集端退出汇报...
private:
	virtual void	Entry();				// 线程函数...
	BOOL			LogoutHaoYi();			// 采集端从中心退出...
	BOOL			LogoutGather();			// 采集端从节点退出...
	BOOL			RegisterHaoYi();		// 验证许可证...
	BOOL			RegisterGather();		// 注册采集端...
	BOOL			GetAllCameraData();		// 获取通道配置...
	BOOL			parseJson(Json::Value & outValue);
private:
	enum {
		kRegGather	  = 0,					// 正在注册采集端...
		kRegHaoYi	  = 1,					// 正在验证许可证...
		kGetCamera	  = 2,					// 正在获取通道...
		kRegCamera	  = 3,					// 正在注册通道(添加或修改)...
		kDelCamera    = 4,					// 正在删除摄像头...
		kStatCamera	  = 5,					// 正在汇报通道状态...
		kGatherLogout = 6,					// 采集端退出汇报...
	}m_eRegState;
private:
	string			m_strUTF8Data;			// 统一的反馈数据...
	int				m_nCurCameraCount;		// 已经注册的摄像头个数...
	CHaoYiView	*	m_lpHaoYiView;			// 视图指针...
};
