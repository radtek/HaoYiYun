
#pragma once

#include "XPButton.h"
#include "OSThread.h"
#include "json.h"

class CDlgMini : public CDialogEx, public OSThread
{
	DECLARE_DYNAMIC(CDlgMini)

public:
	CDlgMini(CWnd* pParent = NULL);
	virtual ~CDlgMini();
	enum { IDD = IDD_BIND_MINI };
protected:
	virtual void DoDataExchange(CDataExchange* pDX);
	virtual BOOL OnInitDialog();
	virtual void OnCancel();
	virtual void OnOK();
	afx_msg void OnClose();
	afx_msg void OnDestroy();
	afx_msg void OnClickUnBindButton();
	afx_msg BOOL OnEraseBkgnd(CDC* pDC);
	afx_msg LRESULT	OnMsgBindMini(WPARAM wParam, LPARAM lParam);
	afx_msg LRESULT	OnMsgUnBindMini(WPARAM wParam, LPARAM lParam);
	DECLARE_MESSAGE_MAP()
public:
	void			doPostCurl(char *pData, size_t nSize);	// 处理汇报反馈...
private:
	virtual void	Entry();
	BOOL			doWebGetMiniCode();						// 获取本采集端在小程序中的小程序码...
	BOOL			doWebGetMiniToken();					// 获取小程序的access_token...
	BOOL			doWebGetUserHead();						// 获取绑定用户的头像数据...
	BOOL			doWebUnBindMini();						// 发送解除绑定命令...
	BOOL			parseJson(Json::Value & outValue, BOOL bIsWeiXin);
	void			DrawImage(CDC * pDC, string & inImgData, CRect & inDispRect);
	void			ShowText(CDC * pDC, CString & inTxtData, CRect & inDispRect, COLORREF inTxtColor, int inFontSize, bool isBold);
	void			DispMiniToken(CDC * pDC);
	void			DispMiniCode(CDC * pDC);
	void			DispMiniHead(CDC * pDC);
	void			CreateUnBindButton();
	void			DestoryUnBindButton();
	void			ResetData();
public:
	enum {
		kButtonUnBind   = 20001,
	};
	enum {
		kBtnWidth		= 120,	// 解除绑定按钮宽度...
		kBtnHeight		= 30,	// 解除绑定按钮高度...
		kQRHeadWidth	= 132,	// 用户头像的宽度...
		kQRCodeWidth	= 300,	// 小程序码的宽度...
	};
	enum BIND_CMD {
		kNoneCmd		= 0,	// 没有命令...
		kScanCmd		= 1,	// 扫码成功...
		kSaveCmd		= 2,	// 确认绑定...
		kCancelCmd		= 3,	// 取消绑定...
	}m_eBindCmd;
	enum {
		kMiniToken		= 0,	// 获取access_token...
		kMiniCode		= 1,	// 获取并显示小程序码...
		kMiniHead		= 2,	// 获取并显示用户头像...
	}m_eMiniState;
private:
	CFont	 *		m_lpBtnFont;			// 按钮字体...
	CXPButton		m_btnUnBind;			// 解除绑定...
	CString			m_strNotice;			// 提示信息...
	string			m_strUTF8Data;			// 统一的反馈数据...
	string			m_strMiniToken;			// 获取到的access_token值...
	string			m_strUserName;			// 获取到的户名昵称...
	string			m_strUserHead;			// 获取到的用户头像，转换成132*132...
	string			m_strMiniPath;			// 获取到的小程序响应页面...
	string			m_strMiniPicCode;		// 获取到的小程序码图片数据...
	string			m_strMiniPicHead;		// 获取到的绑定用户头像图片数据...
	int				m_nBindUserID;			// 获取到的绑定微信用户编号(中心服务器)...

	friend class CHaoYiView;
};
