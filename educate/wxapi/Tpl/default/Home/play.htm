
<include file = "Common:home_header" />
<include file = "Common:home_nav" />

<script src="/wxapi/public/js/jquery.royalslider.js" language="javascript"></script>
<script src="/wxapi/public/js/jquery.jedate.js" language="javascript"></script>

<link href="/wxapi/public/css/royalslider.css" type="text/css" rel="stylesheet">
<link href="/wxapi/public/css/jedate.css" type="text/css" rel="stylesheet">
<link href="/wxapi/public/css/play.css" type="text/css" rel="stylesheet">

<section class="content-wrap">
  <div class="container">
    <div class="row">
      <article>
        <div id="video-gallery" class="royalSlider videoGallery rsDefault">
          <volist name="my_play" id="vo">
          <notempty name='vo.record_id'>
          <a class="rsImg rsHide" data-rsVideo="{{:__APP__}}/Home/show/type/vod/record_id/{{$vo.record_id}}" 
             <empty name='vo.image_fdfs'>href="/wxapi/public/images/snap.png"<else/>href="{{$my_web_tracker}}{{$vo.image_fdfs}}"</empty> >
            <div class="rsTmb">
              <div class="serial">
                <span class="fa fa-play"></span>
              </div>
              <div class="cover">
                <img src="{{$my_web_tracker}}{{$vo.image_fdfs}}_90x50" onerror="doErrSnap();">
                <span class="c-time"><i class="bg"></i><span>{{$vo.disptime}}</span></span>
              </div>
              <div class="headline">{{$vo.created}}</div>
              <div class="status">
                <span><i class="fa fa-file-video-o"></i>&nbsp;{{$vo['file_size']/1024/1024|number_format=###,2,'.',''}}&nbsp;MB</span>
                <span style="margin-left: 10px">
                  <i class="fa fa-play-circle-o" id="vod_{{$vo.record_id}}">&nbsp;{{$vo.clicks}}&nbsp;次</i>
                </span>
              </div>
            </div>
          </a>
          <else/>
          <a class="rsImg rsHide" data-rsVideo="{{:__APP__}}/Home/show/type/live/camera_id/{{$vo.camera_id}}" 
             <empty name='vo.image_fdfs'>href="/wxapi/public/images/snap.png"<else/>href="{{$my_web_tracker}}{{$vo.image_fdfs}}"</empty> >
            <div class="rsTmb">
              <div class="serial">
                <span class="fa fa-play"></span>
              </div>
              <div class="cover">
                <img src="{{$my_web_tracker}}{{$vo.image_fdfs}}_90x50" onerror="doErrSnap();">
              </div>
              <div class="headline">
              通道{{$vo.camera_id}} - 
              <switch name="vo.stream_prop">
                <case value="0">摄像头</case>
                <case value="1">MP4文件</case>
                <case value="2">流转发</case>
              </switch>
              - {{$vo.camera_name}}</div>
              <div class="status">
                <span>
                <switch name="vo.stream_prop">
                  <case value="0"><i class="fa fa-camera"></i></case>
                  <case value="1"><i class="fa fa-file-video-o"></i></case>
                  <case value="2"><i class="fa fa-arrow-circle-o-down"></i></case>
                </switch>
                实时直播</span>
                <span style="margin-left: 10px">
                  <i class="fa fa-play-circle-o" id="live_{{$vo.camera_id}}">&nbsp;{{$vo.clicks}}&nbsp;次</i>
                </span>
              </div>
            </div>
          </a>
          </notempty>
          </volist>
        </div>
      </article>
    </div>
    <div class="row">
      <article class="main-area">
        <div class="l-main">
          <div class="loading-main">
            <div class="loading-img"></div>
            <div class="loading-text">正在加载...</div>
          </div>
        </div>
        <div class="l-side">
          <div class="date-cont">
            <span class="date-title">筛选录制日期：</span>
            <input id="myRecDate" type="text" class="date-workinput date-datainp date-wicon" value="{{$my_init_date}}" readonly>
          </div>
          <div class="float-title">热点推荐</div>
          <div class="float-fix"></div>
          <div id="myHot"></div>
        </div>
        <div class="float-fix"></div>
      </article>
    </div>
    <!--<div class="row">
     <article class="post" style="padding:15px 0px 5px 20px;">
       <h4 class="title">
         <span class="tline">相关通道，总共 {{$my_total_num}} 路，在线 {{$my_online_num}} 路</span>
       </h4>
       <div id="myView"></div>
     </article>
    </div>-->
  </div>
</section>

<script>
// 获取网站地址...
var siteurl="{{:__APP__}}";
// 保存全局的当前播放录像编号...
var g_record_id = 0;

// 处理直播、点播缩略图无法加载的问题...
function doErrSnap() {
  var img = event.srcElement; // 获取事件对象...
  img.src  = "/wxapi/public/images/snap.png"; 
  img.onerror = null; // 控制不要一直跳动
}

// 由子窗口调用的播放结束事件接口...
function doEndedEvent() {
  // 直接得到slider对象，调用next接口...
  var slider = $(".royalSlider").data('royalSlider');
  slider.next();
}

// 处理懒加载前的操作...
function doLazyAppear(left, setting) {
  var objCur = $(this);
  // 在当前对象之前创建一个加载等待框...
  objCur.before('<span class="rsPreloader"></span>');
  // 两秒之后，强制删除加载等待框...
  setTimeout(function() {
    objCur.parent().find('.rsPreloader').remove();
  }, 2000);
}
// 处理懒加载后的操作...
function doLazyLoad(left, setting) {
  $(this).parent().find('.rsPreloader').remove();
}

// 由子窗口调用的修改点击播放次数，触发加载评论列表...
function doClicks(inItemID, inClicks, isVod) {
  // 获取标题名称和定位对象...
  var theTitle = "&nbsp;" + inClicks + "&nbsp;次";
  var theItem = isVod ? ('vod_'+inItemID) : ('live_'+inItemID);
  // 更新播放器右侧次数...
  $('#'+theItem).html(theTitle);
  // 发起异步获取记录信息，兼容IE8...
  $.ajaxSetup({ cache:false });
  $.ajax({
    type: "get",
    async: true,
    url: siteurl+"/Home/getFeed/id/"+inItemID+"/type/"+isVod,
    success: function(ajaxData) {
      // 获取评论区内容...
      var arrJson = $.parseJSON(ajaxData);
      $('.l-main').html(arrJson.feedHtml);
      // 响应 发表评论 的点击事件...
      $('.input-submit').unbind("click").click( function() {
        var theArea = $('#myTextArea');
        var strText = theArea.val();
        // 如果是禁用状态，直接返回...
        if( theArea.attr('disabled') == 'disabled' )
          return;
        // 计算错误提示框显示位置...
        var nLeftPos = theArea.offset().left + theArea.width()/2 - 50;
        var nTopPos = theArea.offset().top - $(document).scrollTop() + 20;
        // 判断输入数据是否有效...
        if( strText.length <= 0 ) {
          layer.msg('评论内容不能为空！', {offset: [nTopPos+'px', nLeftPos+'px']});
          return;
        }
        // 先添加加载框...
        $('#myComment').prepend('<div class="wait-main"><div class="wait-img"></div><div class="wait-text">正在加载...</div></div>');
        // 保存评论并在顶部显示出来...
        $.ajaxSetup({ cache:false });
        $.ajax({
          type: "post",
          async: true,
          url: siteurl+"/Home/saveComment",
          data: {id: inItemID, type: isVod, content: strText},
          success: function(ajaxData) {
            var arrJson = $.parseJSON(ajaxData);
            // 判断处理结果是否正确...
            if( arrJson.err_code ) {
              layer.msg(arrJson.err_msg, {offset: [nTopPos+'px', nLeftPos+'px']});
              return;
            }
            // 将获取到的页面追加到最顶层...
            $('#myComment').find('.wait-main').remove();
            $('#myComment').prepend(arrJson.html);
            $('#myCommFeed').text(arrJson.total);
            // 将输入框清空处理...
            $('#myTextArea').val('');
          },
          error: function(XMLHttpRequest, textStatus, errorThrown) {
            layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
          }
        });
      });
      // 获取流加载和页码...
      var flow = layui.flow;
      var max_comm_page = arrJson.maxCommPage;
      var max_hot_page = arrJson.maxHotPage;
      // 注意：每次点击都会造成#myComment重新加载...
      // 评论列表进行数据流的加载处理...
      flow.load({
        elem: '#myComment',
        isLazyimg: false,
        done: function(page, next){
          // 设置IE8兼容性，加载分页数据...
          $.ajaxSetup({ cache:false });
          $.ajax({
            type: "get",
            async: true,
            url: siteurl+"/Home/pageComment/p/"+page+"/id/"+inItemID+"/type/"+isVod,
            success: function(ajaxData) {
              next(ajaxData, page < max_comm_page);
            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
              layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
            }
          });
        }
      });
      // 如果热点推荐已经加载过，就不用再加载了...
      if( $('#myHot').children().length > 0 )
        return;
      // 重新加载热点推荐数据流...
      flow.load({
        end: ' ',
        elem: '#myHot',
        isLazyimg: false,
        done: function(page, next){
          // 设置IE8兼容性，加载分页数据...
          $.ajaxSetup({ cache:false });
          $.ajax({
            type: "get",
            async: true,
            url: siteurl+"/Home/pageHot/p/"+page,
            success: function(ajaxData) {
              next(ajaxData, page < max_hot_page);
              // 延时加载图片 => 使用外部lazy，不用layui提供的懒加载，不理想...
              // 分页单独懒加载，否则，每次都要全部懒加载...
              $("#page_"+page+" img.lazy").lazyload({
                effect : "fadeIn",
                load: doLazyLoad,
                appear: doLazyAppear,
                placeholder: "/wxapi/public/images/snap.png"
              });
            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
              layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
            }
          });
        }
      });
    },
    error: function(XMLHttpRequest, textStatus, errorThrown) {
      layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
    }
  });
}

// 用户点击回复的处理过程...
function doReply(inObj, inCommentID) {
  var index = layer.load(2);
  var $ = layui.jquery;
  $.ajaxSetup({ cache:false });
  $.ajax({
    type: "get",
    async: true,
    url: siteurl+"/Home/getReply",
    success: function(ajaxData) {
      layer.closeAll('loading');
      layer.open({
        type: 1, //0(dialog), 1(page), 2(iframe), 3(loading), 4(tips)
        closeBtn: 1,
        fixed: true,
        shadeClose: false,
        area: ['500px', '240px'],
        title: "<i class='fa fa-reply'>&nbsp;&nbsp;回复评论</i>",
        content: ajaxData,
        success: function() {
          var form = layui.form;
          $("textarea[name='myReText']").focus();
          form.on('submit(formReply)', function(data) {
            layer.load(2);
            $.ajax({
              type: "post",
              async: true,
              url: siteurl+"/Home/saveReply",
              data: {parent_id: inCommentID, content: data.field.myReText},
              success: function(ajaxData) {
                layer.closeAll();
                var arrJson = $.parseJSON(ajaxData);
                // 判断执行结果，失败，直接弹框返回...
                if( arrJson.err_code > 0 ) {
                  layer.alert(arrJson.err_msg, {icon: 2});
                  return;
                }
                // 如果是子评论中进行的回复操作...
                var theMyChild = $(inObj).parents('#myChild');
                if( theMyChild.length > 0 ) {
                  // 获取子评论的当前数量...
                  var theExpand = theMyChild.parent();
                  var theObjSize = theExpand.find('.js-child-size');
                  var theChildSize = parseInt(theObjSize.text()) || 0;
                  // 将获取的新记录页面追加到子评论顶部...
                  theMyChild.prepend(arrJson.html);
                  // 修改子评论的数量，并显示到页面...
                  theObjSize.text(theChildSize+1);
                  return;
                }
                // 如果是主评论中进行的回复操作，先删除已加载子评论，再展开子评论...
                $(inObj).parents('.comment-item').find('.comment-expand').remove();
                // 先获取新的展开页面头...
                $.ajax({
                  type: "get",
                  async: true,
                  url: siteurl+"/Home/getExpand/comment_id/"+inCommentID,
                  success: function(ajaxData) {
                    // 返回展开页面头和子评论总数...
                    var arrJson = $.parseJSON(ajaxData);
                    $(inObj).parents('.comment-item').append(arrJson.html);
                    // 进行评论回复内容的流加载过程...
                    var theChildList = $(inObj).parents('.comment-item').find('#myChild');
                    var max_child_page = Math.ceil(arrJson.childs/10);
                    var flow = layui.flow;
                    flow.load({
                      end: ' ',
                      isAuto: true,
                      elem: theChildList,
                      isLazyimg: false,
                      done: function(page, next){
                        // 设置IE8兼容性，加载分页数据...
                        $.ajaxSetup({ cache:false });
                        $.ajax({
                          type: "get",
                          async: true,
                          url: siteurl+"/Home/pageComment/p/"+page+"/id/"+inCommentID+"/type/2",
                          success: function(ajaxData) {
                            next(ajaxData, page < max_child_page);
                          },
                          error: function(XMLHttpRequest, textStatus, errorThrown) {
                            layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
                          }
                        });
                      }
                    });
                  },
                  error: function(XMLHttpRequest, textStatus, errorThrown) {
                    layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
                  }
                });
              },
              error: function(XMLHttpRequest, textStatus, errorThrown) {
                layer.closeAll();
                layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
              }
            });
            // 避免form自动跳转...
            return false;
          });
          // 点击取消操作...
          $('.js_form_close').unbind("click").click( function() {
            layer.closeAll('page');
          });
        }
      });
    },
    error: function(XMLHttpRequest, textStatus, errorThrown) {
      layer.closeAll('loading');
      layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
    }
  });
}

// 用户点击展开或隐藏子评论的处理...
function doExChild(inObj, inCommentID, inMaxChild) {
  var theChildList = $(inObj).parent().find('#myChild');
  var theShowReply = $(inObj).parent().find('#myShowReply');
  var theHideReply = $(inObj).parent().find('#myHideReply');
  var max_child_page = Math.ceil(inMaxChild/10);
  var flow = layui.flow;
  if( theShowReply.css('display') == 'block' ) {
    // 显示子评论数据内容...
    theShowReply.css('display', 'none');
    theHideReply.css('display', 'block');
    theChildList.css('display', 'block');
    // 评论列表进行数据流的加载处理 => 子评论没有才进行流加载...
    if( theChildList.children().length <= 0 ) {
      flow.load({
        end: ' ',
        isAuto: true,
        elem: theChildList,
        isLazyimg: false,
        done: function(page, next){
          // 设置IE8兼容性，加载分页数据...
          $.ajaxSetup({ cache:false });
          $.ajax({
            type: "get",
            async: true,
            url: siteurl+"/Home/pageComment/p/"+page+"/id/"+inCommentID+"/type/2",
            success: function(ajaxData) {
              next(ajaxData, page < max_child_page);
            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
              layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
            }
          });
        }
      });
    }
  } else {
    theShowReply.css('display', 'block');
    theHideReply.css('display', 'none');
    theChildList.css('display', 'none');
  }
}

// 用户点击 删除 评论 的处理...
function doDelComment(inObj, inCommentID) {
  // 阻止事件继续分发下去...
  event.stopPropagation();
  // 如果是评论回复的删除，需要特殊处理...
  var theDelChild = $(inObj).parents('#myChild');
  if( theDelChild.length > 0 ) {
    // 首先，删除当前评论节点对象...
    $(inObj).parent().parent().parent().parent().remove();
    // 获取当前的子评论数量，并添加正在删除等待框...
    var theExpand = theDelChild.parent();
    var theObjSize = theExpand.find('.js-child-size');
    var theChildSize = parseInt(theObjSize.text()) || 0;
    theDelChild.prepend('<div class="wait-main"><div class="wait-img"></div><div class="wait-text">正在删除...</div></div>');
    // 向服务器发起异步删除操作...
    $.ajaxSetup({ cache:false });
    $.ajax({
      type: "post",
      async: true,
      url: siteurl+"/Home/delComment",
      data: {comment_id: inCommentID},
      success: function(ajaxData) {
        // 删除等待框，调整评论总数...
        theChildSize = ((theChildSize > 0) ? theChildSize - 1 : 0);
        theDelChild.find('.wait-main').remove();
        theObjSize.text(theChildSize);
        // 如果子评论数为0，删除扩展对象...
        if( theChildSize <= 0 ) {
          theExpand.remove();
        }
      },
      error: function(XMLHttpRequest, textStatus, errorThrown) {
        layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
      }
    });
    return;
  }
  // 主体评论的处理，先删除本地界面信息...
  $(inObj).parents('.comment-item').remove();
  // 获取当前的评论总数，显示等待加载框...
  var theTotal = parseInt($('#myCommFeed').text()) || 0;
  $('#myComment').prepend('<div class="wait-main"><div class="wait-img"></div><div class="wait-text">正在删除...</div></div>');
  // 向服务器发起异步删除操作...
  $.ajaxSetup({ cache:false });
  $.ajax({
    type: "post",
    async: true,
    url: siteurl+"/Home/delComment",
    data: {comment_id: inCommentID},
    success: function(ajaxData) {
      // 删除等待框，调整评论总数...
      theTotal = ((theTotal > 0) ? theTotal - 1 : 0);
      $('#myComment').find('.wait-main').remove();
      $('#myCommFeed').text(theTotal);
    },
    error: function(XMLHttpRequest, textStatus, errorThrown) {
      layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
    }
  });
}

// 用户点击 赞/踩 的处理...
function doLike(inObj, inID, inType, inFlag) {
  // 阻止事件继续分发下去...
  event.stopPropagation();
  // inType = 0 => camera_id
  // inType = 1 => record_id
  // inType = 2 => comment_id
  // inFlag = 0 => 踩 => kick
  // inFlag = 1 => 赞 => like
  // 获取赞/踩的当前次数...
  var theObjIconDown = $(inObj).parent().parent().find('#myIconDown');
  var theObjIconUp = $(inObj).parent().parent().find('#myIconUp');
  var theObjLikes = $(inObj).parent().parent().find('#myLikes')
  var theObjKicks = $(inObj).parent().parent().find('#myKicks');
  var theLikesNum = parseInt(theObjLikes.text()) || 0;
  var theKicksNum = parseInt(theObjKicks.text()) || 0;
  // 发起异步推送信息，兼容IE8...
  $.ajaxSetup({ cache:false });
  $.ajax({
    type: "post",
    async: true,
    url: siteurl+"/Home/saveLike",
    data: {id: inID, type: inType, is_like: inFlag, likes_num: theLikesNum, kicks_num: theKicksNum},
    success: function(ajaxData) {
      var arrJson = $.parseJSON(ajaxData);
      theObjLikes.text(arrJson.likes_num > 0 ? arrJson.likes_num : '');
      theObjKicks.text(arrJson.kicks_num > 0 ? arrJson.kicks_num : '');
      if( arrJson.likes_num > theLikesNum ) theObjIconUp.addClass('feed-like');
      if( arrJson.likes_num < theLikesNum ) theObjIconUp.removeClass('feed-like');
      if( arrJson.kicks_num > theKicksNum ) theObjIconDown.addClass('feed-like');
      if( arrJson.kicks_num < theKicksNum ) theObjIconDown.removeClass('feed-like');
    },
    error: function(XMLHttpRequest, textStatus, errorThrown) {
      layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
    }
  });
}

// 由子窗口调用的修改下载连接地址...
function doDownLoadUrl(isVod, inRecordID) {
  // 保存当前正在播放的录像编号，显示或隐藏下载连接...
  g_record_id = inRecordID;
}

// 具体响应用户点击下载的命令...
function doRecDown() {
  // 判断录像编号是否有效...
  if( g_record_id <= 0 ) {
    layer.msg('录像编号无效，无法下载！', {icon: 2});
    return;
  }
  // 弹出下载列表框...
  layer.open({
    type: 2, //0(dialog), 1(page), 2(iframe), 3(loading), 4(tips)
    closeBtn: 1,
    fixed: true,
    scrollbar: false,
    shadeClose: false,
    area: ['600px', '450px'],
    content: "{{:__APP__}}/Home/downRecord/record_id/"+g_record_id,
    title: "<i class='layui-icon'>&#xe601;</i><i class='feed-down-title'>&nbsp;&nbsp;下载相关录像片段</i>"
  });
}

// 处理 layui 过程...
/*layui.use(['flow','layer','form'], function(){
  var nFocusCamera = {{$my_camera.camera_id}};
  var max_page = {{$max_page}};
  var flow = layui.flow;
  // 流加载过程，不用弹等待框...
  flow.load({
    elem: '#myView',
    isLazyimg: false,
    done: function(page, next){
      // 设置IE8兼容性，加载分页数据...
      $.ajaxSetup({ cache:false });
      $.ajax({
        type: "get",
        async: true,
        url: siteurl+"/Home/pageGather/p/"+page+"/gather_id/"+{{$my_gather_id}},
        success: function(ajaxData) {
          next(ajaxData, page < max_page);
          // 延时加载图片 => 使用外部lazy，不用layui提供的懒加载，不理想...
          // <article>不是标准html标签，必须在外面增加一层<div>...
          // 分页单独懒加载，否则，每次都要全部懒加载...
          $("#page_"+page+" img.lazy").lazyload({
            effect : "fadeIn",
            placeholder: "/wxapi/public/images/snap.png"
          });
          // 查找焦点通道，并设置边框颜色为橘红色...
          $("#page_"+page+" .thumb").each(function(){
            if( $(this).attr('id').split('_')[1] == nFocusCamera ) {
              $(this).css('border-color', '#e67e22');
              return false;
            }
          });
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
          layer.alert(textStatus+': '+XMLHttpRequest.status+','+errorThrown, {icon: 2});
        }
      });
    }
  });
});*/

$(document).ready( function () {
  // 记录跳转滑块索引编号 => 从0开始...
  var nCameraID = {{$my_camera.camera_id}};
  var nGoToID = {{$my_goto}};
  // 更新录制筛选日期...
  $('#myRecDate').jeDate({
    zIndex: 3000,
    isinitVal: false,
    format: "YYYY-MM-DD",
    marks: [{{$my_rec_marks}}],
    choosefun:function(elem, val, date) {
      location.href = siteurl+"/Home/play/camera_id/"+nCameraID+"/date/"+val;
    },
    okfun:function(elem, val, date) {
      location.href = siteurl+"/Home/play/camera_id/"+nCameraID+"/date/"+val;
    },
  });
  // 视频集合窗口的处理 => 初始化卡片参数...
  $('#video-gallery').royalSlider({
    arrowsNav: false,
    fadeinLoadedSlide: true,
    controlNavigationSpacing: 0,
    controlNavigation: 'thumbnails',
    thumbs: {
      autoCenter: false,
      fitInViewport: true,
      orientation: 'vertical',
      spacing: 0,
      paddingBottom: 0
    },
    keyboardNavEnabled: true,
    imageScaleMode: 'fill',
    imageAlignCenter:true,
    slidesSpacing: 0,
    loop: false,
    loopRewind: true,
    numImagesToPreload: 3,
    video: {
      autoHideArrows:true,
      autoHideControlNav:false,
      autoHideBlocks: true
    }, 
    autoScaleSlider: true, 
    autoScaleSliderWidth: 960,     
    autoScaleSliderHeight: 450,
    imgWidth: 640,
    imgHeight: 360
  });
  /////////////////////////////////////////////////
  // 注册slider的相关事件，方便自定义过程处理...
  /////////////////////////////////////////////////
  var slider = $(".royalSlider").data('royalSlider');
  // 注册slider切换前事件 => 停止上一个视频对象...
  slider.ev.on('rsBeforeMove', function(event, type, userAction ) {
    this.stopVideo();
  });
  // 注册slider切换后事件 => 启动当前视频对象...
  slider.ev.on('rsAfterSlideChange', function(event) {
    this.playVideo();
  });
  // 当slider发生变化之后的事件响应...
  /*slider.ev.on('rsAfterSlideChange', function(event) {
  });*/
  // 第一个视频在0.5秒之后自动播放...
  setTimeout(function() {
    ((nGoToID > 0) ? slider.goTo(nGoToID) : slider.toggleVideo());
  }, 500);
  // 载入流加载对象...
  layui.use(['flow','layer','form']);
});
</script>

<include file = "Common:home_footer" />
